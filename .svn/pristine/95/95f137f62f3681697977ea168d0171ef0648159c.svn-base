<?php
    //定义系统的基类
    class CRMEntityModel extends Model{

        /* 返回列表的表格头 */
        function ListViewHeader(){

        }


        /* 根据ID返回表数据 */
        public function retrieve_entity_info($record,$module){

            //查询所有模块的主表和关联表
            $result = Array();
            foreach($this->tab_name_index as $table_name=>$index)
            {
                $result[$table_name] = $adb->pquery("select * from $table_name where $index=?", array($record));
            }

            //返回模块的ID
            $Module = D('Module');
            $moduleid = $Module->getModuleID($module);
            // var_dump($moduleid);
            //返回模块的字段表
            $fields = array();
            $Module_Fileds = D('Fields');
            $fields = $Module_Fileds->getModuleFields($moduleid);


        }
        /* 返回新建的区块信息  */ 
        public function createBlocks(){
            //定义返回数组
            $createFields = $this->createFields;
            $createViewArray = array();
            foreach($createFields as $blocks => $createFieldsValue){
                $fieldsLength = count($createFieldsValue);
                for($i=0;$i<$fieldsLength;$i++){
                    $fieldsArray = array();
                    $fieldsArray[] = $createFieldsValue[$i]; 

                    $i++;
                    if($i<$fieldsLength){
                        $fieldsArray[] = $createFieldsValue[$i]; 
                    }                  
                    $createViewArray[$blocks][] = $fieldsArray;

                }
            }
            return $createViewArray;

        }
        //返回浏览记录的详细的区块信息
        public function detailBlocks($result){
            //定义返回数组
            $detailFields = $this->detailFields;
            $detailViewArray = array();
            foreach($detailFields as $blocks => $detailFieldsValue){
                $fieldsLength = count($detailFieldsValue);
                for($i=0;$i<$fieldsLength;$i++){
                    $fieldsArray = array();
                    $detailFieldsValue[$i]['value'] =$result[$detailFieldsValue[$i]['name']];
                    $fieldsArray[] = $detailFieldsValue[$i]; 

                    $i++;
                    if($i<$fieldsLength){
                        $detailFieldsValue[$i]['value'] =$result[$detailFieldsValue[$i]['name']];   
                        $fieldsArray[] = $detailFieldsValue[$i]; 
                    }                  
                    $detailViewArray[$blocks][] = $fieldsArray;

                }
            }
            return $detailViewArray;
        }
        //返回编辑记录的详细的区块信息
        public function editBlocks($result){
            //定义返回数组
            $editFields = $this->editFields;
            $editViewArray = array();
            foreach($editFields as $blocks => $editFieldsValue){
                $fieldsLength = count($editFieldsValue);
                for($i=0;$i<$fieldsLength;$i++){
                    $fieldsArray = array();
                    $editFieldsValue[$i]['value'] =$result[$editFieldsValue[$i]['name']];
                    $fieldsArray[] = $editFieldsValue[$i]; 

                    $i++;
                    if($i<$fieldsLength){
                        $editFieldsValue[$i]['value'] =$result[$editFieldsValue[$i]['name']];   
                        $fieldsArray[] = $editFieldsValue[$i]; 
                    }                  
                    $editViewArray[$blocks][] = $fieldsArray;

                }
            }
            return $editViewArray;
        }
        
        //退餐的blocks信息
        function returnBlocks(){
            //定义返回数组
            $returnFields = $this->returnFields;
            $returnViewArray = array();
            foreach($returnFields as $blocks => $returnFieldsValue){
                $fieldsLength = count($returnFieldsValue);
                for($i=0;$i<$fieldsLength;$i++){
                    $fieldsArray = array();
                    $fieldsArray[] = $returnFieldsValue[$i]; 

                    $i++;
                    if($i<$fieldsLength){
                        $fieldsArray[] = $returnFieldsValue[$i]; 
                    }                  
                    $returnViewArray[$blocks][] = $fieldsArray;

                }
            }
            return $returnViewArray;
        }

        
        //根据模块名称，返回对应的导航
        function getTabName($current_module){
            //读取缓存，如果有的话
            $tabName = F('moduleName'.$current_module);
            if(!empty($tabName)){
                return $tabName;
            }
            //启动模块,取得模块的ID
            $module_model = D('Module');
            $result = $module_model->field('moduleid')->where("name='$current_module'")->select();
            //echo $module_model->getLastSql();          
            $moduleid = $result[0]['moduleid'];

            //启动导航和模块关联
            $tab_module_rel_model = D('tab_module_rel');
            $result = $tab_module_rel_model->field('tabid')->where("moduleid=$moduleid")->select();
            $tabid = $result[0]['tabid'];
            //取得当前导航名称
            $tab_model = D('Tab');
            $result = $tab_model->field('tab_label')->where("tabid=$tabid")->select();
            $tab_name = $result[0]['tab_label'];
            
            //缓存
            F('moduleName'.$current_module,$tab_name);
            return $tab_name;

        }
    }

?>
